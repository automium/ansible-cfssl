---
install: true
configure: true
cfssl_pkg_download_base_version: "R1.2"
cfssl_pkg_download_base_os: linux
cfssl_pkg_download_base_architecture: amd64
cfssl_pkg_download_base_path: /usr/local/bin
cfssl_pkg:
  cfssl:
    url: "https://pkg.cfssl.org/{{cfssl_pkg_download_base_version}}/cfssl_{{ cfssl_pkg_download_base_os }}-{{ cfssl_pkg_download_base_architecture }}"
    path: "{{ cfssl_pkg_download_base_path }}/cfssl"
    checksum: sha256:eb34ab2179e0b67c29fd55f52422a94fe751527b06a403a79325fed7cf0145bd
  cfssljson:
    url: "https://pkg.cfssl.org/{{cfssl_pkg_download_base_version}}/cfssljson_{{ cfssl_pkg_download_base_os }}-{{ cfssl_pkg_download_base_architecture }}"
    path: "{{ cfssl_pkg_download_base_path }}/cfssljson"
    checksum: sha256:1c9e628c3b86c3f2f8af56415d474c9ed4c8f9246630bd21c3418dbe5bf6401e
  cfssl_bundle:
    url: "https://pkg.cfssl.org/{{cfssl_pkg_download_base_version}}/cfssl-bundle_{{ cfssl_pkg_download_base_os }}-{{ cfssl_pkg_download_base_architecture }}"
    path: "{{ cfssl_pkg_download_base_path }}/cfssl-bundle"
    checksum: sha256:c0ad5348ede0b8038872bf06bab1f81657b710392371c5db10bd8372336ebd0f
  cfssl_certinfo:
    url: "https://pkg.cfssl.org/{{cfssl_pkg_download_base_version}}/cfssl-certinfo_{{ cfssl_pkg_download_base_os }}-{{ cfssl_pkg_download_base_architecture }}"
    path: "{{ cfssl_pkg_download_base_path }}/cfssl-certinfo"
    checksum: sha256:ad395c35824bdff343189188658f15810d137c230463810026c6f04f3f78f08f
  cfssl_newkey:
    url: "https://pkg.cfssl.org/{{cfssl_pkg_download_base_version}}/cfssl-newkey_{{ cfssl_pkg_download_base_os }}-{{ cfssl_pkg_download_base_architecture }}"
    path: "{{ cfssl_pkg_download_base_path }}/cfssl-newkey"
    checksum: sha256:eb58dfa8c8115b59f28d8444b1007c7be169814d24b8702d34dace3b208b3b20
  cfssl_scan:
    url: "https://pkg.cfssl.org/{{cfssl_pkg_download_base_version}}/cfssl-scan_{{ cfssl_pkg_download_base_os }}-{{ cfssl_pkg_download_base_architecture }}"
    path: "{{ cfssl_pkg_download_base_path }}/cfssl-scan"
    checksum: sha256:1eb88a7898ac9006584fc689ff8c29f1ad9837d9fbf794fa7c62976fd8b490a3
  mkbundle:
    url: "https://pkg.cfssl.org/{{cfssl_pkg_download_base_version}}/mkbundle_{{ cfssl_pkg_download_base_os }}-{{ cfssl_pkg_download_base_architecture }}"
    path: "{{ cfssl_pkg_download_base_path }}/mkbundle"
    checksum: sha256:88f90fa9120662c3acdbbedd22306f4cf7ae71e9708838a6d5c8f1652b5bf747
  multirootca:
    url: "https://pkg.cfssl.org/{{cfssl_pkg_download_base_version}}/multirootca_{{ cfssl_pkg_download_base_os }}-{{ cfssl_pkg_download_base_architecture }}"
    path: "{{ cfssl_pkg_download_base_path }}/multirootca"
    checksum: sha256:7b7884ae113eb7693591194399d424bd39902252c3198d6dea075ac98b3f275d

download_list:
  - "{{ cfssl_pkg.cfssl }}"
  - "{{ cfssl_pkg.cfssljson }}"
  - "{{ cfssl_pkg.cfssl_bundle }}"
  - "{{ cfssl_pkg.cfssl_certinfo }}"
  - "{{ cfssl_pkg.cfssl_newkey }}"
  - "{{ cfssl_pkg.cfssl_scan }}"
  - "{{ cfssl_pkg.mkbundle }}"
  - "{{ cfssl_pkg.multirootca }}"

organizations: private_cert
certificate_configurations_base_path: /etc/cfssl
certificate_configurations_base_path_organizations: "{{ certificate_configurations_base_path }}/{{ organizations }}"
certificate_base_path: "/etc/ssl/private/{{ organizations }}"
dir_list:
  - /etc/ssl/private/
  - "{{ certificate_base_path }}"
  - "{{ certificate_configurations_base_path }}"
  - "{{ certificate_configurations_base_path_organizations }}"

keyring_host: keyring
node_locations: /etc/myservice/cert
node_cert_mode: "0644"
node_cert_user_owner: "root"
node_cert_user_group: "root"

create_node_list:
  - /etc/myservice/
  - /etc/myservice/cert

base_domain: example.it

certificate_directive:
  ca:
    path: "{{ certificate_base_path }}/ca"
    configurations_path: "{{ certificate_configurations_base_path_organizations }}/ca.json"
    certificate_name: ca
    configuration:
      CN: Example CA
      key:
        algo: rsa
        size: 2048
      names:
        - C: IT
          L: Milano
          O: Example, SPA
          OU: MyService Cluster Company SPA
          ST: Italy
      ca:
        expiry: 42720h
  node_certificate:
    path: "{{ certificate_base_path }}/node/{{ ansible_hostname }}"
    configurations_path: "{{ certificate_configurations_base_path_organizations }}/node-{{ansible_hostname}}.json"
    certificate_name: server
    configuration:
      CN: Server
      hosts:
        - 127.0.0.1
        - localhost
        - "{{ ansible_hostname }}.{{ base_domain }}"
        - "{{ ansible_fqdn }}"
      key:
        algo: rsa
        size: 2048
  certificate_config:
    path: "{{ certificate_base_path }}/certificate"
    configurations_path: "{{ certificate_configurations_base_path_organizations }}/certificate.json"
    configuration:
      signing:
        default:
          expiry: 43800h
        profiles:
          server:
            expiry: 43800h
            usages:
              - signing
              - digital signing
              - key encipherment
              - server auth
          peer:
            expiry: 43800h
            usages:
              - signing
              - digital signature
              - key encipherment
              - client auth
              - server auth
          client:
            expiry: 43800h
            usages:
              - signing
              - digital signature
              - key encipherment
              - client auth

command_run:
  inti_ca:
    shell: "cfssl gencert -initca {{ certificate_directive.ca.configurations_path }} | cfssljson -bare {{ certificate_directive.ca.certificate_name }}"
    chdir: "{{ certificate_directive.ca.path }}/"
    creates: "{{certificate_directive.ca.path}}/{{ certificate_directive.ca.certificate_name }}.pem"
    delegate_to: "{{ ansible_hostname }}"
  client_cert:
    shell: "cfssl gencert -ca={{certificate_directive.ca.path}}/ca.pem -ca-key={{certificate_directive.ca.path}}/ca-key.pem -config={{ certificate_directive.certificate_config.configurations_path }} -profile=client {{ certificate_directive.node_certificate.configurations_path }} | cfssljson -bare {{ ansible_hostname }}-client"
    chdir: "{{ certificate_directive.node_certificate.path }}/"
    creates: "{{ certificate_directive.node_certificate.path }}/{{ ansible_hostname }}-client.pem"
    delegate_to: "{{ ansible_hostname }}"
